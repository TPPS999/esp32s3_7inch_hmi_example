[platformio]
default_envs =
; Choose one of the following boards:

   IBB_HMI
   IBB_HMI_OTA

;
; Here are the global configurations used for all board envs
;
[env]
framework = arduino
; The `espressif32` latest official version does not support Arduino v3.1.x, temporarily using a third-party version
; platform = espressif32
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
platform_packages =
    platformio/framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#3.1.1
; Use high performance libraries to improve the performance, and avoid esp32s3 RGB LCD screen drifting issue
    platformio/framework-arduinoespressif32-libs@https://dl.espressif.com/AE/esp-arduino-libs/esp32-3.1.1-h.zip
monitor_speed = 115200
lib_deps =
; For production:
    https://github.com/esp-arduino-libs/ESP32_Display_Panel.git
    https://github.com/esp-arduino-libs/ESP32_IO_Expander.git#v1.1.0
    https://github.com/esp-arduino-libs/esp-lib-utils.git#v0.2.0
    https://github.com/lvgl/lvgl.git#v8.4.0
; For local development:
    ; file://../../../../ESP32_Display_Panel
    ; file://../../../../ESP32_IO_Expander
    ; file://../../../../esp-lib-utils
    ; file://../../../../lvgl

;
; Here are the options that can be used in the board envs
;
[common]
build_flags =
; Arduino related:
    -DCORE_DEBUG_LEVEL=1    ; Set to `5` for full debug output, `0` for none
; LVGL related:
    -DLV_CONF_INCLUDE_SIMPLE
    -DLV_LVGL_H_INCLUDE_SIMPLE
; Include path:
    -I src
; Others:
    ; -DDISABLE_ALL_LIBRARY_WARNINGS    ; Disable all library warnings

[spi_qspi_lcd]
build_flags =
; LVGL related:
    -DLV_COLOR_16_SWAP=1

[rgb_mipi_lcd]
build_flags =
; LVGL related:
    -DLV_COLOR_16_SWAP=0

;

[env:IBB_HMI]
build_flags =
    ${common.build_flags}
    ${rgb_mipi_lcd.build_flags}
    -DESP_PANEL_BOARD_DEFAULT_USE_SUPPORTED=0
    -DBOARD_WAVESHARE_ESP32_S3_Touch_LCD_7
board = BOARD_WAVESHARE_ESP32_S3_Touch_LCD_7

; Upload configuration
; Note: ESP32-S3 has USB/CAN conflict - GPIO19/20 shared via FSUSB42UMX
; When CAN is active (USB_SEL=HIGH), native USB doesn't work for programming
upload_protocol = esptool
upload_speed = 921600
upload_port = COM3        ; Force COM3 (native USB)
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
monitor_rts = 0
monitor_dtr = 0

; Upload flags for better reset handling
upload_flags =
    --before=default_reset
    --after=hard_reset
    --chip=esp32s3

; Try to avoid the serial port error on reset
upload_resetmethod = nodemcu
board_build.flash_mode = dio

;
; OTA (Over-The-Air) upload environment
;
[env:IBB_HMI_OTA]
build_flags =
    ${common.build_flags}
    ${rgb_mipi_lcd.build_flags}
    -DESP_PANEL_BOARD_DEFAULT_USE_SUPPORTED=0
    -DBOARD_WAVESHARE_ESP32_S3_Touch_LCD_7
board = BOARD_WAVESHARE_ESP32_S3_Touch_LCD_7

; OTA Upload configuration
upload_protocol = espota
upload_port = 192.168.7.42  ; Modify once you get your IP
upload_flags =
    --auth=2233445566
    --port=3232

; Monitor via Telnet (socket)
monitor_speed = 115200
monitor_port = socket://192.168.7.42:23  ; Modify once you get your IP
monitor_filters = esp32_exception_decoder

;
; RECOVERY: For emergency recovery use recovery/upload_recovery.bat script
; It uploads pre-built recovery_68ac617.bin (WiFi + OTA only, no CAN/Modbus/Telnet)
;
